
rev:	file format elf32-i386

Disassembly of section .init:

00001000 <_init>:
; _init():
    1000: f3 0f 1e fb                  	endbr32
    1004: 53                           	pushl	%ebx
    1005: 83 ec 08                     	subl	$8, %esp
    1008: e8 13 01 00 00               	calll	0x1120 <__x86.get_pc_thunk.bx>
    100d: 81 c3 a3 2f 00 00            	addl	$12195, %ebx            # imm = 0x2FA3
    1013: 8b 83 3c 00 00 00            	movl	60(%ebx), %eax
    1019: 85 c0                        	testl	%eax, %eax
    101b: 74 02                        	je	0x101f <_init+0x1f>
    101d: ff d0                        	calll	*%eax
    101f: 83 c4 08                     	addl	$8, %esp
    1022: 5b                           	popl	%ebx
    1023: c3                           	retl

Disassembly of section .plt:

00001030 <.plt>:
    1030: ff b3 04 00 00 00            	pushl	4(%ebx)
    1036: ff a3 08 00 00 00            	jmpl	*8(%ebx)
    103c: 00 00                        	addb	%al, (%eax)
    103e: 00 00                        	addb	%al, (%eax)
    1040: ff a3 0c 00 00 00            	jmpl	*12(%ebx)
    1046: 68 00 00 00 00               	pushl	$0
    104b: e9 e0 ff ff ff               	jmp	0x1030 <.plt>
    1050: ff a3 10 00 00 00            	jmpl	*16(%ebx)
    1056: 68 08 00 00 00               	pushl	$8
    105b: e9 d0 ff ff ff               	jmp	0x1030 <.plt>
    1060: ff a3 14 00 00 00            	jmpl	*20(%ebx)
    1066: 68 10 00 00 00               	pushl	$16
    106b: e9 c0 ff ff ff               	jmp	0x1030 <.plt>
    1070: ff a3 18 00 00 00            	jmpl	*24(%ebx)
    1076: 68 18 00 00 00               	pushl	$24
    107b: e9 b0 ff ff ff               	jmp	0x1030 <.plt>
    1080: ff a3 1c 00 00 00            	jmpl	*28(%ebx)
    1086: 68 20 00 00 00               	pushl	$32
    108b: e9 a0 ff ff ff               	jmp	0x1030 <.plt>
    1090: ff a3 20 00 00 00            	jmpl	*32(%ebx)
    1096: 68 28 00 00 00               	pushl	$40
    109b: e9 90 ff ff ff               	jmp	0x1030 <.plt>
    10a0: ff a3 24 00 00 00            	jmpl	*36(%ebx)
    10a6: 68 30 00 00 00               	pushl	$48
    10ab: e9 80 ff ff ff               	jmp	0x1030 <.plt>
    10b0: ff a3 28 00 00 00            	jmpl	*40(%ebx)
    10b6: 68 38 00 00 00               	pushl	$56
    10bb: e9 70 ff ff ff               	jmp	0x1030 <.plt>
    10c0: ff a3 2c 00 00 00            	jmpl	*44(%ebx)
    10c6: 68 40 00 00 00               	pushl	$64
    10cb: e9 60 ff ff ff               	jmp	0x1030 <.plt>
    10d0: ff a3 30 00 00 00            	jmpl	*48(%ebx)
    10d6: 68 48 00 00 00               	pushl	$72
    10db: e9 50 ff ff ff               	jmp	0x1030 <.plt>

Disassembly of section .plt.got:

000010e0 <.plt.got>:
    10e0: ff a3 38 00 00 00            	jmpl	*56(%ebx)
    10e6: 66 90                        	nop

Disassembly of section .text:

000010f0 <_start>:
; _start():
    10f0: f3 0f 1e fb                  	endbr32
    10f4: 31 ed                        	xorl	%ebp, %ebp
    10f6: 5e                           	popl	%esi
    10f7: 89 e1                        	movl	%esp, %ecx
    10f9: 83 e4 f0                     	andl	$-16, %esp
    10fc: 50                           	pushl	%eax
    10fd: 54                           	pushl	%esp
    10fe: 52                           	pushl	%edx
    10ff: e8 18 00 00 00               	calll	0x111c <_start+0x2c>
    1104: 81 c3 ac 2e 00 00            	addl	$11948, %ebx            # imm = 0x2EAC
    110a: 6a 00                        	pushl	$0
    110c: 6a 00                        	pushl	$0
    110e: 51                           	pushl	%ecx
    110f: 56                           	pushl	%esi
    1110: ff b3 48 00 00 00            	pushl	72(%ebx)
    1116: e8 25 ff ff ff               	calll	0x1040 <.plt+0x10>
    111b: f4                           	hlt
    111c: 8b 1c 24                     	movl	(%esp), %ebx
    111f: c3                           	retl

00001120 <__x86.get_pc_thunk.bx>:
; __x86.get_pc_thunk.bx():
    1120: 8b 1c 24                     	movl	(%esp), %ebx
    1123: c3                           	retl
    1124: 66 90                        	nop
    1126: 66 90                        	nop
    1128: 66 90                        	nop
    112a: 66 90                        	nop
    112c: 66 90                        	nop
    112e: 66 90                        	nop

00001130 <deregister_tm_clones>:
; deregister_tm_clones():
    1130: e8 e4 00 00 00               	calll	0x1219 <__x86.get_pc_thunk.dx>
    1135: 81 c2 7b 2e 00 00            	addl	$11899, %edx            # imm = 0x2E7B
    113b: 8d 8a 58 00 00 00            	leal	88(%edx), %ecx
    1141: 8d 82 58 00 00 00            	leal	88(%edx), %eax
    1147: 39 c8                        	cmpl	%ecx, %eax
    1149: 74 1d                        	je	0x1168 <deregister_tm_clones+0x38>
    114b: 8b 82 34 00 00 00            	movl	52(%edx), %eax
    1151: 85 c0                        	testl	%eax, %eax
    1153: 74 13                        	je	0x1168 <deregister_tm_clones+0x38>
    1155: 55                           	pushl	%ebp
    1156: 89 e5                        	movl	%esp, %ebp
    1158: 83 ec 14                     	subl	$20, %esp
    115b: 51                           	pushl	%ecx
    115c: ff d0                        	calll	*%eax
    115e: 83 c4 10                     	addl	$16, %esp
    1161: c9                           	leave
    1162: c3                           	retl
    1163: 8d 74 26 00                  	leal	(%esi,%eiz), %esi
    1167: 90                           	nop
    1168: c3                           	retl
    1169: 8d b4 26 00 00 00 00         	leal	(%esi,%eiz), %esi

00001170 <register_tm_clones>:
; register_tm_clones():
    1170: e8 a4 00 00 00               	calll	0x1219 <__x86.get_pc_thunk.dx>
    1175: 81 c2 3b 2e 00 00            	addl	$11835, %edx            # imm = 0x2E3B
    117b: 55                           	pushl	%ebp
    117c: 89 e5                        	movl	%esp, %ebp
    117e: 53                           	pushl	%ebx
    117f: 8d 8a 58 00 00 00            	leal	88(%edx), %ecx
    1185: 8d 82 58 00 00 00            	leal	88(%edx), %eax
    118b: 83 ec 04                     	subl	$4, %esp
    118e: 29 c8                        	subl	%ecx, %eax
    1190: 89 c3                        	movl	%eax, %ebx
    1192: c1 e8 1f                     	shrl	$31, %eax
    1195: c1 fb 02                     	sarl	$2, %ebx
    1198: 01 d8                        	addl	%ebx, %eax
    119a: d1 f8                        	sarl	%eax
    119c: 74 14                        	je	0x11b2 <register_tm_clones+0x42>
    119e: 8b 92 4c 00 00 00            	movl	76(%edx), %edx
    11a4: 85 d2                        	testl	%edx, %edx
    11a6: 74 0a                        	je	0x11b2 <register_tm_clones+0x42>
    11a8: 83 ec 08                     	subl	$8, %esp
    11ab: 50                           	pushl	%eax
    11ac: 51                           	pushl	%ecx
    11ad: ff d2                        	calll	*%edx
    11af: 83 c4 10                     	addl	$16, %esp
    11b2: 8b 5d fc                     	movl	-4(%ebp), %ebx
    11b5: c9                           	leave
    11b6: c3                           	retl
    11b7: 8d b4 26 00 00 00 00         	leal	(%esi,%eiz), %esi
    11be: 66 90                        	nop

000011c0 <__do_global_dtors_aux>:
; __do_global_dtors_aux():
    11c0: f3 0f 1e fb                  	endbr32
    11c4: 55                           	pushl	%ebp
    11c5: 89 e5                        	movl	%esp, %ebp
    11c7: 53                           	pushl	%ebx
    11c8: e8 53 ff ff ff               	calll	0x1120 <__x86.get_pc_thunk.bx>
    11cd: 81 c3 e3 2d 00 00            	addl	$11747, %ebx            # imm = 0x2DE3
    11d3: 83 ec 04                     	subl	$4, %esp
    11d6: 80 bb 58 00 00 00 00         	cmpb	$0, 88(%ebx)
    11dd: 75 27                        	jne	0x1206 <__do_global_dtors_aux+0x46>
    11df: 8b 83 38 00 00 00            	movl	56(%ebx), %eax
    11e5: 85 c0                        	testl	%eax, %eax
    11e7: 74 11                        	je	0x11fa <__do_global_dtors_aux+0x3a>
    11e9: 83 ec 0c                     	subl	$12, %esp
    11ec: ff b3 54 00 00 00            	pushl	84(%ebx)
    11f2: e8 e9 fe ff ff               	calll	0x10e0 <.plt.got>
    11f7: 83 c4 10                     	addl	$16, %esp
    11fa: e8 31 ff ff ff               	calll	0x1130 <deregister_tm_clones>
    11ff: c6 83 58 00 00 00 01         	movb	$1, 88(%ebx)
    1206: 8b 5d fc                     	movl	-4(%ebp), %ebx
    1209: c9                           	leave
    120a: c3                           	retl
    120b: 8d 74 26 00                  	leal	(%esi,%eiz), %esi
    120f: 90                           	nop

00001210 <frame_dummy>:
; frame_dummy():
    1210: f3 0f 1e fb                  	endbr32
    1214: e9 57 ff ff ff               	jmp	0x1170 <register_tm_clones>

00001219 <__x86.get_pc_thunk.dx>:
; __x86.get_pc_thunk.dx():
    1219: 8b 14 24                     	movl	(%esp), %edx
    121c: c3                           	retl

0000121d <process>:
; process():
    121d: 55                           	pushl	%ebp
    121e: 89 e5                        	movl	%esp, %ebp
    1220: 53                           	pushl	%ebx
    1221: 83 ec 14                     	subl	$20, %esp
    1224: e8 98 05 00 00               	calll	0x17c1 <__x86.get_pc_thunk.ax>
    1229: 05 87 2d 00 00               	addl	$11655, %eax            # imm = 0x2D87
    122e: c7 45 f4 00 00 00 00         	movl	$0, -12(%ebp)
    1235: 83 ec 0c                     	subl	$12, %esp
    1238: 6a 78                        	pushl	$120
    123a: 89 c3                        	movl	%eax, %ebx
    123c: e8 5f fe ff ff               	calll	0x10a0 <.plt+0x70>
    1241: 83 c4 10                     	addl	$16, %esp
    1244: 89 c2                        	movl	%eax, %edx
    1246: 8b 45 10                     	movl	16(%ebp), %eax
    1249: 89 10                        	movl	%edx, (%eax)
    124b: c7 45 f4 00 00 00 00         	movl	$0, -12(%ebp)
    1252: eb 17                        	jmp	0x126b <process+0x4e>
    1254: 8b 45 10                     	movl	16(%ebp), %eax
    1257: 8b 10                        	movl	(%eax), %edx
    1259: 8b 45 f4                     	movl	-12(%ebp), %eax
    125c: c1 e0 02                     	shll	$2, %eax
    125f: 01 d0                        	addl	%edx, %eax
    1261: c7 00 00 00 00 00            	movl	$0, (%eax)
    1267: 83 45 f4 01                  	addl	$1, -12(%ebp)
    126b: 83 7d f4 1d                  	cmpl	$29, -12(%ebp)
    126f: 7e e3                        	jle	0x1254 <process+0x37>
    1271: c7 45 f4 00 00 00 00         	movl	$0, -12(%ebp)
    1278: eb 43                        	jmp	0x12bd <process+0xa0>
    127a: 8b 45 10                     	movl	16(%ebp), %eax
    127d: 8b 10                        	movl	(%eax), %edx
    127f: 8b 45 f4                     	movl	-12(%ebp), %eax
    1282: c1 e0 02                     	shll	$2, %eax
    1285: 01 d0                        	addl	%edx, %eax
    1287: 8b 10                        	movl	(%eax), %edx
    1289: 83 c2 01                     	addl	$1, %edx
    128c: 89 10                        	movl	%edx, (%eax)
    128e: 8b 45 f4                     	movl	-12(%ebp), %eax
    1291: 8d 14 85 00 00 00 00         	leal	(,%eax,4), %edx
    1298: 8b 45 0c                     	movl	12(%ebp), %eax
    129b: 01 d0                        	addl	%edx, %eax
    129d: 8b 10                        	movl	(%eax), %edx
    129f: 83 ea 01                     	subl	$1, %edx
    12a2: 89 10                        	movl	%edx, (%eax)
    12a4: 8b 45 f4                     	movl	-12(%ebp), %eax
    12a7: 8d 14 85 00 00 00 00         	leal	(,%eax,4), %edx
    12ae: 8b 45 0c                     	movl	12(%ebp), %eax
    12b1: 01 d0                        	addl	%edx, %eax
    12b3: 8b 00                        	movl	(%eax), %eax
    12b5: 85 c0                        	testl	%eax, %eax
    12b7: 75 c1                        	jne	0x127a <process+0x5d>
    12b9: 83 45 f4 01                  	addl	$1, -12(%ebp)
    12bd: 83 7d f4 1d                  	cmpl	$29, -12(%ebp)
    12c1: 7e e1                        	jle	0x12a4 <process+0x87>
    12c3: 90                           	nop
    12c4: 90                           	nop
    12c5: 8b 5d fc                     	movl	-4(%ebp), %ebx
    12c8: c9                           	leave
    12c9: c3                           	retl

000012ca <verify>:
; verify():
    12ca: 55                           	pushl	%ebp
    12cb: 89 e5                        	movl	%esp, %ebp
    12cd: 83 ec 10                     	subl	$16, %esp
    12d0: e8 ec 04 00 00               	calll	0x17c1 <__x86.get_pc_thunk.ax>
    12d5: 05 db 2c 00 00               	addl	$11483, %eax            # imm = 0x2CDB
    12da: c7 45 fc 00 00 00 00         	movl	$0, -4(%ebp)
    12e1: c7 45 f8 05 00 00 00         	movl	$5, -8(%ebp)
    12e8: c7 45 f4 19 00 00 00         	movl	$25, -12(%ebp)
    12ef: eb 1b                        	jmp	0x130c <verify+0x42>
    12f1: 8b 55 fc                     	movl	-4(%ebp), %edx
    12f4: 8b 45 08                     	movl	8(%ebp), %eax
    12f7: 01 d0                        	addl	%edx, %eax
    12f9: 0f b6 00                     	movzbl	(%eax), %eax
    12fc: 3c 2d                        	cmpb	$45, %al
    12fe: 75 04                        	jne	0x1304 <verify+0x3a>
    1300: 83 65 f8 03                  	andl	$3, -8(%ebp)
    1304: 83 45 fc 01                  	addl	$1, -4(%ebp)
    1308: 83 6d f4 01                  	subl	$1, -12(%ebp)
    130c: 83 7d f4 00                  	cmpl	$0, -12(%ebp)
    1310: 75 df                        	jne	0x12f1 <verify+0x27>
    1312: 83 7d f8 5c                  	cmpl	$92, -8(%ebp)
    1316: 75 07                        	jne	0x131f <verify+0x55>
    1318: b8 00 00 00 00               	movl	$0, %eax
    131d: eb 05                        	jmp	0x1324 <verify+0x5a>
    131f: b8 01 00 00 00               	movl	$1, %eax
    1324: c9                           	leave
    1325: c3                           	retl

00001326 <format>:
; format():
    1326: 55                           	pushl	%ebp
    1327: 89 e5                        	movl	%esp, %ebp
    1329: 56                           	pushl	%esi
    132a: 53                           	pushl	%ebx
    132b: 83 ec 10                     	subl	$16, %esp
    132e: e8 ed fd ff ff               	calll	0x1120 <__x86.get_pc_thunk.bx>
    1333: 81 c3 7d 2c 00 00            	addl	$11389, %ebx            # imm = 0x2C7D
    1339: c7 45 f4 00 00 00 00         	movl	$0, -12(%ebp)
    1340: 83 ec 0c                     	subl	$12, %esp
    1343: 6a 78                        	pushl	$120
    1345: e8 56 fd ff ff               	calll	0x10a0 <.plt+0x70>
    134a: 83 c4 10                     	addl	$16, %esp
    134d: 89 45 f0                     	movl	%eax, -16(%ebp)
    1350: c7 45 f4 00 00 00 00         	movl	$0, -12(%ebp)
    1357: eb 36                        	jmp	0x138f <format+0x69>
    1359: 8b 55 f4                     	movl	-12(%ebp), %edx
    135c: 8b 45 08                     	movl	8(%ebp), %eax
    135f: 01 d0                        	addl	%edx, %eax
    1361: 0f b6 00                     	movzbl	(%eax), %eax
    1364: 0f be f0                     	movsbl	%al, %esi
    1367: 8b 45 0c                     	movl	12(%ebp), %eax
    136a: 8b 10                        	movl	(%eax), %edx
    136c: 8b 45 f4                     	movl	-12(%ebp), %eax
    136f: c1 e0 02                     	shll	$2, %eax
    1372: 01 d0                        	addl	%edx, %eax
    1374: 8b 00                        	movl	(%eax), %eax
    1376: 8b 55 0c                     	movl	12(%ebp), %edx
    1379: 8b 0a                        	movl	(%edx), %ecx
    137b: 8b 55 f4                     	movl	-12(%ebp), %edx
    137e: c1 e2 02                     	shll	$2, %edx
    1381: 01 ca                        	addl	%ecx, %edx
    1383: 89 c1                        	movl	%eax, %ecx
    1385: d3 e6                        	shll	%cl, %esi
    1387: 89 f0                        	movl	%esi, %eax
    1389: 89 02                        	movl	%eax, (%edx)
    138b: 83 45 f4 01                  	addl	$1, -12(%ebp)
    138f: 83 7d f4 1d                  	cmpl	$29, -12(%ebp)
    1393: 7e c4                        	jle	0x1359 <format+0x33>
    1395: 83 ec 0c                     	subl	$12, %esp
    1398: ff 75 f0                     	pushl	-16(%ebp)
    139b: e8 d0 fc ff ff               	calll	0x1070 <.plt+0x40>
    13a0: 83 c4 10                     	addl	$16, %esp
    13a3: 90                           	nop
    13a4: 8d 65 f8                     	leal	-8(%ebp), %esp
    13a7: 5b                           	popl	%ebx
    13a8: 5e                           	popl	%esi
    13a9: 5d                           	popl	%ebp
    13aa: c3                           	retl

000013ab <prepare>:
; prepare():
    13ab: 55                           	pushl	%ebp
    13ac: 89 e5                        	movl	%esp, %ebp
    13ae: 53                           	pushl	%ebx
    13af: 83 ec 14                     	subl	$20, %esp
    13b2: e8 69 fd ff ff               	calll	0x1120 <__x86.get_pc_thunk.bx>
    13b7: 81 c3 f9 2b 00 00            	addl	$11257, %ebx            # imm = 0x2BF9
    13bd: c7 45 f4 00 00 00 00         	movl	$0, -12(%ebp)
    13c4: 83 ec 08                     	subl	$8, %esp
    13c7: 8d 83 70 e0 ff ff            	leal	-8080(%ebx), %eax
    13cd: 50                           	pushl	%eax
    13ce: 8d 83 72 e0 ff ff            	leal	-8078(%ebx), %eax
    13d4: 50                           	pushl	%eax
    13d5: e8 e6 fc ff ff               	calll	0x10c0 <.plt+0x90>
    13da: 83 c4 10                     	addl	$16, %esp
    13dd: 89 45 f0                     	movl	%eax, -16(%ebp)
    13e0: c7 45 f4 00 00 00 00         	movl	$0, -12(%ebp)
    13e7: e9 bb 00 00 00               	jmp	0x14a7 <.L19+0x1b>
    13ec: 8b 55 f4                     	movl	-12(%ebp), %edx
    13ef: 8b 45 08                     	movl	8(%ebp), %eax
    13f2: 01 d0                        	addl	%edx, %eax
    13f4: 0f b6 00                     	movzbl	(%eax), %eax
    13f7: 0f be c0                     	movsbl	%al, %eax
    13fa: 83 e8 63                     	subl	$99, %eax
    13fd: 83 f8 1a                     	cmpl	$26, %eax
    1400: 0f 87 86 00 00 00            	ja	0x148c <.L19>
    1406: c1 e0 02                     	shll	$2, %eax
    1409: 8b 84 18 a4 e0 ff ff         	movl	-8028(%eax,%ebx), %eax
    1410: 01 d8                        	addl	%ebx, %eax
    1412: ff e0                        	jmpl	*%eax

00001414 <.L25>:
; .L25():
    1414: ff 75 f0                     	pushl	-16(%ebp)
    1417: 6a 03                        	pushl	$3
    1419: 6a 01                        	pushl	$1
    141b: 8d 83 7c e0 ff ff            	leal	-8068(%ebx), %eax
    1421: 50                           	pushl	%eax
    1422: e8 69 fc ff ff               	calll	0x1090 <.plt+0x60>
    1427: 83 c4 10                     	addl	$16, %esp
    142a: eb 77                        	jmp	0x14a3 <.L19+0x17>

0000142c <.L23>:
; .L23():
    142c: ff 75 f0                     	pushl	-16(%ebp)
    142f: 6a 06                        	pushl	$6
    1431: 6a 01                        	pushl	$1
    1433: 8d 83 80 e0 ff ff            	leal	-8064(%ebx), %eax
    1439: 50                           	pushl	%eax
    143a: e8 51 fc ff ff               	calll	0x1090 <.plt+0x60>
    143f: 83 c4 10                     	addl	$16, %esp
    1442: eb 5f                        	jmp	0x14a3 <.L19+0x17>

00001444 <.L24>:
; .L24():
    1444: ff 75 f0                     	pushl	-16(%ebp)
    1447: 6a 07                        	pushl	$7
    1449: 6a 01                        	pushl	$1
    144b: 8d 83 87 e0 ff ff            	leal	-8057(%ebx), %eax
    1451: 50                           	pushl	%eax
    1452: e8 39 fc ff ff               	calll	0x1090 <.plt+0x60>
    1457: 83 c4 10                     	addl	$16, %esp
    145a: eb 47                        	jmp	0x14a3 <.L19+0x17>

0000145c <.L22>:
; .L22():
    145c: ff 75 f0                     	pushl	-16(%ebp)
    145f: 6a 06                        	pushl	$6
    1461: 6a 01                        	pushl	$1
    1463: 8d 83 8f e0 ff ff            	leal	-8049(%ebx), %eax
    1469: 50                           	pushl	%eax
    146a: e8 21 fc ff ff               	calll	0x1090 <.plt+0x60>
    146f: 83 c4 10                     	addl	$16, %esp
    1472: eb 2f                        	jmp	0x14a3 <.L19+0x17>

00001474 <.L20>:
; .L20():
    1474: ff 75 f0                     	pushl	-16(%ebp)
    1477: 6a 06                        	pushl	$6
    1479: 6a 01                        	pushl	$1
    147b: 8d 83 96 e0 ff ff            	leal	-8042(%ebx), %eax
    1481: 50                           	pushl	%eax
    1482: e8 09 fc ff ff               	calll	0x1090 <.plt+0x60>
    1487: 83 c4 10                     	addl	$16, %esp
    148a: eb 17                        	jmp	0x14a3 <.L19+0x17>

0000148c <.L19>:
; .L19():
    148c: ff 75 f0                     	pushl	-16(%ebp)
    148f: 6a 05                        	pushl	$5
    1491: 6a 01                        	pushl	$1
    1493: 8d 83 9d e0 ff ff            	leal	-8035(%ebx), %eax
    1499: 50                           	pushl	%eax
    149a: e8 f1 fb ff ff               	calll	0x1090 <.plt+0x60>
    149f: 83 c4 10                     	addl	$16, %esp
    14a2: 90                           	nop
    14a3: 83 45 f4 01                  	addl	$1, -12(%ebp)
    14a7: 83 7d f4 1d                  	cmpl	$29, -12(%ebp)
    14ab: 0f 8e 3b ff ff ff            	jle	0x13ec <prepare+0x41>
    14b1: 90                           	nop
    14b2: 90                           	nop
    14b3: 8b 5d fc                     	movl	-4(%ebp), %ebx
    14b6: c9                           	leave
    14b7: c3                           	retl

000014b8 <checkRes>:
; checkRes():
    14b8: 55                           	pushl	%ebp
    14b9: 89 e5                        	movl	%esp, %ebp
    14bb: 57                           	pushl	%edi
    14bc: 56                           	pushl	%esi
    14bd: 83 c4 80                     	addl	$-128, %esp
    14c0: e8 54 fd ff ff               	calll	0x1219 <__x86.get_pc_thunk.dx>
    14c5: 81 c2 eb 2a 00 00            	addl	$10987, %edx            # imm = 0x2AEB
    14cb: 8d 85 7c ff ff ff            	leal	-132(%ebp), %eax
    14d1: 8d 92 10 e1 ff ff            	leal	-7920(%edx), %edx
    14d7: b9 1e 00 00 00               	movl	$30, %ecx
    14dc: 89 c7                        	movl	%eax, %edi
    14de: 89 d6                        	movl	%edx, %esi
    14e0: f3 a5                        	rep		movsl	(%esi), %es:(%edi)
    14e2: c7 45 f4 00 00 00 00         	movl	$0, -12(%ebp)
    14e9: eb 2a                        	jmp	0x1515 <checkRes+0x5d>
    14eb: 8b 45 f4                     	movl	-12(%ebp), %eax
    14ee: 8b 94 85 7c ff ff ff         	movl	-132(%ebp,%eax,4), %edx
    14f5: 8b 45 f4                     	movl	-12(%ebp), %eax
    14f8: 8d 0c 85 00 00 00 00         	leal	(,%eax,4), %ecx
    14ff: 8b 45 08                     	movl	8(%ebp), %eax
    1502: 01 c8                        	addl	%ecx, %eax
    1504: 8b 00                        	movl	(%eax), %eax
    1506: 39 c2                        	cmpl	%eax, %edx
    1508: 74 07                        	je	0x1511 <checkRes+0x59>
    150a: b8 00 00 00 00               	movl	$0, %eax
    150f: eb 0f                        	jmp	0x1520 <checkRes+0x68>
    1511: 83 45 f4 01                  	addl	$1, -12(%ebp)
    1515: 83 7d f4 1d                  	cmpl	$29, -12(%ebp)
    1519: 7e d0                        	jle	0x14eb <checkRes+0x33>
    151b: b8 01 00 00 00               	movl	$1, %eax
    1520: 83 ec 80                     	subl	$-128, %esp
    1523: 5e                           	popl	%esi
    1524: 5f                           	popl	%edi
    1525: 5d                           	popl	%ebp
    1526: c3                           	retl

00001527 <checkPassword>:
; checkPassword():
    1527: 55                           	pushl	%ebp
    1528: 89 e5                        	movl	%esp, %ebp
    152a: 81 ec 88 00 00 00            	subl	$136, %esp
    1530: e8 8c 02 00 00               	calll	0x17c1 <__x86.get_pc_thunk.ax>
    1535: 05 7b 2a 00 00               	addl	$10875, %eax            # imm = 0x2A7B
    153a: c7 45 f4 00 00 00 00         	movl	$0, -12(%ebp)
    1541: c7 85 7c ff ff ff 05 00 00 00	movl	$5, -132(%ebp)
    154b: c7 45 80 03 00 00 00         	movl	$3, -128(%ebp)
    1552: c7 45 84 06 00 00 00         	movl	$6, -124(%ebp)
    1559: c7 45 88 05 00 00 00         	movl	$5, -120(%ebp)
    1560: c7 45 8c 02 00 00 00         	movl	$2, -116(%ebp)
    1567: c7 45 90 05 00 00 00         	movl	$5, -112(%ebp)
    156e: c7 45 94 03 00 00 00         	movl	$3, -108(%ebp)
    1575: c7 45 98 03 00 00 00         	movl	$3, -104(%ebp)
    157c: c7 45 9c 03 00 00 00         	movl	$3, -100(%ebp)
    1583: c7 45 a0 05 00 00 00         	movl	$5, -96(%ebp)
    158a: c7 45 a4 02 00 00 00         	movl	$2, -92(%ebp)
    1591: c7 45 a8 04 00 00 00         	movl	$4, -88(%ebp)
    1598: c7 45 ac 06 00 00 00         	movl	$6, -84(%ebp)
    159f: c7 45 b0 05 00 00 00         	movl	$5, -80(%ebp)
    15a6: c7 45 b4 05 00 00 00         	movl	$5, -76(%ebp)
    15ad: c7 45 b8 02 00 00 00         	movl	$2, -72(%ebp)
    15b4: c7 45 bc 02 00 00 00         	movl	$2, -68(%ebp)
    15bb: c7 45 c0 05 00 00 00         	movl	$5, -64(%ebp)
    15c2: c7 45 c4 02 00 00 00         	movl	$2, -60(%ebp)
    15c9: c7 45 c8 06 00 00 00         	movl	$6, -56(%ebp)
    15d0: c7 45 cc 05 00 00 00         	movl	$5, -52(%ebp)
    15d7: c7 45 d0 01 00 00 00         	movl	$1, -48(%ebp)
    15de: c7 45 d4 03 00 00 00         	movl	$3, -44(%ebp)
    15e5: c7 45 d8 04 00 00 00         	movl	$4, -40(%ebp)
    15ec: c7 45 dc 05 00 00 00         	movl	$5, -36(%ebp)
    15f3: c7 45 e0 03 00 00 00         	movl	$3, -32(%ebp)
    15fa: c7 45 e4 04 00 00 00         	movl	$4, -28(%ebp)
    1601: c7 45 e8 06 00 00 00         	movl	$6, -24(%ebp)
    1608: c7 45 ec 06 00 00 00         	movl	$6, -20(%ebp)
    160f: c7 45 f0 05 00 00 00         	movl	$5, -16(%ebp)
    1616: 83 ec 04                     	subl	$4, %esp
    1619: 8d 85 78 ff ff ff            	leal	-136(%ebp), %eax
    161f: 50                           	pushl	%eax
    1620: 8d 85 7c ff ff ff            	leal	-132(%ebp), %eax
    1626: 50                           	pushl	%eax
    1627: ff 75 08                     	pushl	8(%ebp)
    162a: e8 ee fb ff ff               	calll	0x121d <process>
    162f: 83 c4 10                     	addl	$16, %esp
    1632: 83 ec 08                     	subl	$8, %esp
    1635: 8d 85 78 ff ff ff            	leal	-136(%ebp), %eax
    163b: 50                           	pushl	%eax
    163c: ff 75 08                     	pushl	8(%ebp)
    163f: e8 67 fd ff ff               	calll	0x13ab <prepare>
    1644: 83 c4 10                     	addl	$16, %esp
    1647: 83 ec 0c                     	subl	$12, %esp
    164a: ff 75 08                     	pushl	8(%ebp)
    164d: e8 78 fc ff ff               	calll	0x12ca <verify>
    1652: 83 c4 10                     	addl	$16, %esp
    1655: 89 45 f4                     	movl	%eax, -12(%ebp)
    1658: 83 ec 08                     	subl	$8, %esp
    165b: 8d 85 78 ff ff ff            	leal	-136(%ebp), %eax
    1661: 50                           	pushl	%eax
    1662: ff 75 08                     	pushl	8(%ebp)
    1665: e8 bc fc ff ff               	calll	0x1326 <format>
    166a: 83 c4 10                     	addl	$16, %esp
    166d: 8b 85 78 ff ff ff            	movl	-136(%ebp), %eax
    1673: 83 ec 0c                     	subl	$12, %esp
    1676: 50                           	pushl	%eax
    1677: e8 3c fe ff ff               	calll	0x14b8 <checkRes>
    167c: 83 c4 10                     	addl	$16, %esp
    167f: 83 f8 01                     	cmpl	$1, %eax
    1682: 75 07                        	jne	0x168b <checkPassword+0x164>
    1684: b8 01 00 00 00               	movl	$1, %eax
    1689: eb 05                        	jmp	0x1690 <checkPassword+0x169>
    168b: b8 00 00 00 00               	movl	$0, %eax
    1690: c9                           	leave
    1691: c3                           	retl

00001692 <main>:
; main():
    1692: 8d 4c 24 04                  	leal	4(%esp), %ecx
    1696: 83 e4 f0                     	andl	$-16, %esp
    1699: ff 71 fc                     	pushl	-4(%ecx)
    169c: 55                           	pushl	%ebp
    169d: 89 e5                        	movl	%esp, %ebp
    169f: 53                           	pushl	%ebx
    16a0: 51                           	pushl	%ecx
    16a1: 83 ec 30                     	subl	$48, %esp
    16a4: e8 77 fa ff ff               	calll	0x1120 <__x86.get_pc_thunk.bx>
    16a9: 81 c3 07 29 00 00            	addl	$10503, %ebx            # imm = 0x2907
    16af: 83 ec 0c                     	subl	$12, %esp
    16b2: 8d 83 88 e1 ff ff            	leal	-7800(%ebx), %eax
    16b8: 50                           	pushl	%eax
    16b9: e8 f2 f9 ff ff               	calll	0x10b0 <.plt+0x80>
    16be: 83 c4 10                     	addl	$16, %esp
    16c1: 83 ec 0c                     	subl	$12, %esp
    16c4: 8d 83 91 e1 ff ff            	leal	-7791(%ebx), %eax
    16ca: 50                           	pushl	%eax
    16cb: e8 e0 f9 ff ff               	calll	0x10b0 <.plt+0x80>
    16d0: 83 c4 10                     	addl	$16, %esp
    16d3: 83 ec 0c                     	subl	$12, %esp
    16d6: 8d 83 a9 e1 ff ff            	leal	-7767(%ebx), %eax
    16dc: 50                           	pushl	%eax
    16dd: e8 6e f9 ff ff               	calll	0x1050 <.plt+0x20>
    16e2: 83 c4 10                     	addl	$16, %esp
    16e5: 8b 83 44 00 00 00            	movl	68(%ebx), %eax
    16eb: 8b 00                        	movl	(%eax), %eax
    16ed: 83 ec 0c                     	subl	$12, %esp
    16f0: 50                           	pushl	%eax
    16f1: e8 6a f9 ff ff               	calll	0x1060 <.plt+0x30>
    16f6: 83 c4 10                     	addl	$16, %esp
    16f9: c7 45 f4 00 00 00 00         	movl	$0, -12(%ebp)
    1700: eb 25                        	jmp	0x1727 <main+0x95>
    1702: 83 ec 0c                     	subl	$12, %esp
    1705: 6a 2e                        	pushl	$46
    1707: e8 c4 f9 ff ff               	calll	0x10d0 <.plt+0xa0>
    170c: 83 c4 10                     	addl	$16, %esp
    170f: 8b 83 44 00 00 00            	movl	68(%ebx), %eax
    1715: 8b 00                        	movl	(%eax), %eax
    1717: 83 ec 0c                     	subl	$12, %esp
    171a: 50                           	pushl	%eax
    171b: e8 40 f9 ff ff               	calll	0x1060 <.plt+0x30>
    1720: 83 c4 10                     	addl	$16, %esp
    1723: 83 45 f4 01                  	addl	$1, -12(%ebp)
    1727: 83 7d f4 04                  	cmpl	$4, -12(%ebp)
    172b: 7e d5                        	jle	0x1702 <main+0x70>
    172d: 83 ec 0c                     	subl	$12, %esp
    1730: 8d 83 c4 e1 ff ff            	leal	-7740(%ebx), %eax
    1736: 50                           	pushl	%eax
    1737: e8 14 f9 ff ff               	calll	0x1050 <.plt+0x20>
    173c: 83 c4 10                     	addl	$16, %esp
    173f: 8b 83 40 00 00 00            	movl	64(%ebx), %eax
    1745: 8b 00                        	movl	(%eax), %eax
    1747: 83 ec 04                     	subl	$4, %esp
    174a: 50                           	pushl	%eax
    174b: 6a 1f                        	pushl	$31
    174d: 8d 45 d5                     	leal	-43(%ebp), %eax
    1750: 50                           	pushl	%eax
    1751: e8 2a f9 ff ff               	calll	0x1080 <.plt+0x50>
    1756: 83 c4 10                     	addl	$16, %esp
    1759: 85 c0                        	testl	%eax, %eax
    175b: 74 3c                        	je	0x1799 <main+0x107>
    175d: 83 ec 0c                     	subl	$12, %esp
    1760: 8d 45 d5                     	leal	-43(%ebp), %eax
    1763: 50                           	pushl	%eax
    1764: e8 be fd ff ff               	calll	0x1527 <checkPassword>
    1769: 83 c4 10                     	addl	$16, %esp
    176c: 83 f8 01                     	cmpl	$1, %eax
    176f: 75 14                        	jne	0x1785 <main+0xf3>
    1771: 83 ec 0c                     	subl	$12, %esp
    1774: 8d 83 e3 e1 ff ff            	leal	-7709(%ebx), %eax
    177a: 50                           	pushl	%eax
    177b: e8 30 f9 ff ff               	calll	0x10b0 <.plt+0x80>
    1780: 83 c4 10                     	addl	$16, %esp
    1783: eb 2d                        	jmp	0x17b2 <main+0x120>
    1785: 83 ec 0c                     	subl	$12, %esp
    1788: 8d 83 f3 e1 ff ff            	leal	-7693(%ebx), %eax
    178e: 50                           	pushl	%eax
    178f: e8 1c f9 ff ff               	calll	0x10b0 <.plt+0x80>
    1794: 83 c4 10                     	addl	$16, %esp
    1797: eb 19                        	jmp	0x17b2 <main+0x120>
    1799: 83 ec 0c                     	subl	$12, %esp
    179c: 8d 83 0c e2 ff ff            	leal	-7668(%ebx), %eax
    17a2: 50                           	pushl	%eax
    17a3: e8 08 f9 ff ff               	calll	0x10b0 <.plt+0x80>
    17a8: 83 c4 10                     	addl	$16, %esp
    17ab: b8 ff ff ff ff               	movl	$4294967295, %eax       # imm = 0xFFFFFFFF
    17b0: eb 05                        	jmp	0x17b7 <main+0x125>
    17b2: b8 00 00 00 00               	movl	$0, %eax
    17b7: 8d 65 f8                     	leal	-8(%ebp), %esp
    17ba: 59                           	popl	%ecx
    17bb: 5b                           	popl	%ebx
    17bc: 5d                           	popl	%ebp
    17bd: 8d 61 fc                     	leal	-4(%ecx), %esp
    17c0: c3                           	retl

000017c1 <__x86.get_pc_thunk.ax>:
; __x86.get_pc_thunk.ax():
    17c1: 8b 04 24                     	movl	(%esp), %eax
    17c4: c3                           	retl

Disassembly of section .fini:

000017c8 <_fini>:
; _fini():
    17c8: f3 0f 1e fb                  	endbr32
    17cc: 53                           	pushl	%ebx
    17cd: 83 ec 08                     	subl	$8, %esp
    17d0: e8 4b f9 ff ff               	calll	0x1120 <__x86.get_pc_thunk.bx>
    17d5: 81 c3 db 27 00 00            	addl	$10203, %ebx            # imm = 0x27DB
    17db: 83 c4 08                     	addl	$8, %esp
    17de: 5b                           	popl	%ebx
    17df: c3                           	retl
